import type { ColDef, ColGroupDef } from 'ag-grid-community';

// Column category definitions for modular management
export interface ColumnCategory {
  id: string;
  name: string;
  enabled: boolean;
  color: string;
  backgroundColor: string;
  columns: ColDef[];
}

// Status cell renderer function name - will be handled by component
const statusCellRenderer = 'statusRenderer';

// Standard value formatter for null/undefined values
const nullValueFormatter = (params: { value?: unknown }): string => params.value ? String(params.value) : '-';

// Date formatter for consistent date display
const dateFormatter = (params: { value?: string | Date }): string => {
  return params.value ? new Date(params.value).toLocaleDateString() : '-';
};

// Currency formatter for cost fields
const currencyFormatter = (params: { value?: number }): string => {
  return params.value ? `$${params.value.toLocaleString()}` : '-';
};

// Number formatter with appropriate decimal places
const numberFormatter = (params: { value?: number | string }, decimals: number = 2): string => {
  return params.value !== null && params.value !== undefined 
    ? Number(params.value).toFixed(decimals) 
    : '-';
};

// Selection checkbox column
export const selectionColumn: ColDef = {
  headerName: '',
  checkboxSelection: true,
  headerCheckboxSelection: true,
  width: 50,
  sortable: false,
  filter: false,
  pinned: 'left',
  lockPinned: true,
};

// Core columns that are always visible
export const coreColumns: ColDef[] = [
  {
    headerName: 'Asset Tag',
    field: 'assetTag',
    sortable: true,
    filter: true,
    flex: 1,
    minWidth: 120,
    pinned: 'left',
    lockPinned: true,
  },
  {
    headerName: 'Name',
    field: 'name',
    sortable: true,
    filter: true,
    flex: 2,
    minWidth: 180,
  },
  {
    headerName: 'Status',
    field: 'status',
    sortable: true,
    filter: true,
    flex: 1,
    minWidth: 100,
    cellRenderer: statusCellRenderer,
  },
  {
    headerName: 'Condition',
    field: 'condition',
    sortable: true,
    filter: true,
    flex: 1,
    minWidth: 100,
    valueFormatter: nullValueFormatter,
  },
];

// Action column that's always pinned right
export const actionColumn: ColDef = {
  headerName: 'Actions',
  cellRenderer: 'actionsRenderer', // Custom renderer passed from component
  width: 120,
  sortable: false,
  filter: false,
  pinned: 'right',
  lockPinned: true,
};

// Column categories for modular management
export const columnCategories: ColumnCategory[] = [
  {
    id: 'identification',
    name: 'Identification',
    enabled: true,
    color: '#1976d2',
    backgroundColor: '#e3f2fd',
    columns: [
      {
        headerName: 'Manufacturer',
        field: 'manufacturer',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Model',
        field: 'modelNumber',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Serial Number',
        field: 'serialNumber',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Description',
        field: 'description',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 200,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Catalog Name',
        field: 'catalogName',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'categorization',
    name: 'Categorization',
    enabled: false, // Hidden by default due to many fields
    color: '#7b1fa2',
    backgroundColor: '#f3e5f5',
    columns: [
      {
        headerName: 'Trade',
        field: 'trade',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Asset Category',
        field: 'assetCategory',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Asset Type',
        field: 'assetType',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'System Category',
        field: 'systemCategory',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Sub System Type',
        field: 'subSystemType',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'location',
    name: 'Location',
    enabled: true,
    color: '#388e3c',
    backgroundColor: '#e8f5e8',
    columns: [
      {
        headerName: 'Location',
        field: 'location',
        sortable: true,
        filter: true,
        flex: 1.5,
        minWidth: 160,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Building',
        field: 'buildingName',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Floor',
        field: 'floor',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 100,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Room',
        field: 'roomNumber',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 100,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Area',
        field: 'area',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'financial',
    name: 'Financial/TCO',
    enabled: false, // Hidden by default - show on demand
    color: '#f57c00',
    backgroundColor: '#fff3e0',
    columns: [
      {
        headerName: 'Purchase Cost',
        field: 'purchaseCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 130,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Installation Cost',
        field: 'installationCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Annual Maintenance',
        field: 'annualMaintenanceCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 150,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Total Cost of Ownership',
        field: 'totalCostOfOwnership',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 180,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
    ],
  },
  {
    id: 'energy',
    name: 'Energy & Power',
    enabled: false, // Hidden by default
    color: '#d32f2f',
    backgroundColor: '#ffebee',
    columns: [
      {
        headerName: 'Rated Power (kW)',
        field: 'ratedPowerKw',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 130,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
      {
        headerName: 'Actual Power (kW)',
        field: 'actualPowerKw',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
      {
        headerName: 'Annual kWh',
        field: 'estimatedAnnualKwh',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 130,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
      {
        headerName: 'Voltage',
        field: 'voltage',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => params.value ? `${params.value}V` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'BTU Rating',
        field: 'btuRating',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 120,
        valueFormatter: (params) => params.value ? `${params.value.toLocaleString()} BTU` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Power Factor',
        field: 'powerFactor',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 120,
        valueFormatter: (params) => numberFormatter(params, 3),
        type: 'numericColumn',
      },
      {
        headerName: 'Amperage',
        field: 'amperage',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => params.value ? `${params.value}A` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Phase',
        field: 'phase',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 80,
        valueFormatter: nullValueFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Load Factor',
        field: 'loadFactor',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 110,
        valueFormatter: (params) => numberFormatter(params, 3),
        type: 'numericColumn',
      },
      {
        headerName: 'Peak Demand (kW)',
        field: 'peakDemandKw',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
    ],
  },
  {
    id: 'energyEfficiency',
    name: 'Energy Efficiency & Costs',
    enabled: false,
    color: '#e64a19',
    backgroundColor: '#fbe9e7',
    columns: [
      {
        headerName: 'Efficiency Rating',
        field: 'energyEfficiencyRating',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Efficiency Value',
        field: 'energyEfficiencyValue',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 130,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
      {
        headerName: 'Operating Hours/Day',
        field: 'dailyOperatingHours',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 150,
        valueFormatter: (params) => params.value ? `${params.value} hrs` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Estimated Operating Hours/Year',
        field: 'estimatedOperatingHours',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 190,
        valueFormatter: (params) => params.value ? `${params.value.toLocaleString()} hrs` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Operating Days/Year',
        field: 'annualOperatingDays',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 160,
        valueFormatter: (params) => params.value ? `${params.value} days` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Annual Electricity Cost',
        field: 'estimatedAnnualElectricityCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 170,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Annual Gas Cost',
        field: 'estimatedAnnualGasCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Total Annual Energy Cost',
        field: 'totalAnnualEnergyCost',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 180,
        valueFormatter: currencyFormatter,
        type: 'numericColumn',
      },
      {
        headerName: 'Gas Consumption Rate',
        field: 'gasConsumptionRate',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 170,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
      {
        headerName: 'Annual Gas Consumption',
        field: 'annualGasConsumption',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 170,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
      {
        headerName: 'Carbon Emissions (kg CO2)',
        field: 'annualCarbonEmissions',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 180,
        valueFormatter: (params) => params.value ? `${params.value.toLocaleString()} kg` : '-',
        type: 'numericColumn',
      },
    ],
  },
  {
    id: 'lifecycle',
    name: 'Lifecycle Management',
    enabled: false, // Hidden by default
    color: '#5d4037',
    backgroundColor: '#efebe9',
    columns: [
      {
        headerName: 'Install Date',
        field: 'installDate',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 120,
        valueFormatter: dateFormatter,
      },
      {
        headerName: 'Manufacture Date',
        field: 'manufactureDate',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: dateFormatter,
      },
      {
        headerName: 'Service Life (Years)',
        field: 'serviceLife',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 150,
        valueFormatter: (params) => params.value ? `${params.value} years` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Expected Lifetime',
        field: 'expectedLifetime',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: (params) => params.value ? `${params.value} years` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Industry Service Life',
        field: 'industryServiceLife',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 160,
        valueFormatter: (params) => params.value ? `${params.value} years` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Observed Remaining Life',
        field: 'observedRemainingLife',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 170,
        valueFormatter: (params) => params.value ? `${params.value} years` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Est. Replacement Date',
        field: 'estimatedReplacementDate',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 160,
        valueFormatter: dateFormatter,
      },
      {
        headerName: 'Warranty Expiration',
        field: 'warrantyExpirationDate',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 150,
        valueFormatter: dateFormatter,
      },
    ],
  },
  {
    id: 'physical',
    name: 'Physical Properties',
    enabled: false, // Hidden by default
    color: '#455a64',
    backgroundColor: '#eceff1',
    columns: [
      {
        headerName: 'Equipment Size',
        field: 'equipmentSize',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Size',
        field: 'size',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 100,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Asset Size Rounded',
        field: 'assetSizeRounded',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Unit',
        field: 'unit',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 80,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'ID Unit',
        field: 'idUnit',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 100,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Weight',
        field: 'weight',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => params.value ? `${params.value} lbs` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Square Feet',
        field: 'squareFeet',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 120,
        valueFormatter: (params) => params.value ? `${params.value} sq ft` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Quantity',
        field: 'quantity',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
    ],
  },
  {
    id: 'vendor',
    name: 'Vendor & Service',
    enabled: false, // Hidden by default
    color: '#00796b',
    backgroundColor: '#e0f2f1',
    columns: [
      {
        headerName: 'Vendor',
        field: 'vendor',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Vendor Website',
        field: 'vendorWebsite',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Service ID',
        field: 'serviceId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 130,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Verified',
        field: 'verified',
        sortable: true,
        filter: 'agSetColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => params.value ? 'Yes' : 'No',
      },
      {
        headerName: 'Owner ID',
        field: 'ownerId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'technical',
    name: 'Technical Specifications',
    enabled: false, // Hidden by default - HVAC/mechanical specific
    color: '#673ab7',
    backgroundColor: '#f3e5f5',
    columns: [
      {
        headerName: 'Motor HP',
        field: 'motorHp',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 100,
        valueFormatter: (params) => params.value ? `${params.value} HP` : '-',
        type: 'numericColumn',
      },
      {
        headerName: 'Number of Circuits',
        field: 'numberOfCircuits',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 140,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
      {
        headerName: 'Supply Fan Motor Size',
        field: 'supplyFanMotorSize',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 170,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Return Fan Motor Size',
        field: 'returnFanMotorSize',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 170,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Belt Size',
        field: 'beltSize',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 100,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Belt Quantity',
        field: 'beltQuantity',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 120,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
      {
        headerName: 'Filter Type',
        field: 'filterType',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Filter Size',
        field: 'filterSize',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Filter Quantity',
        field: 'filterQuantity',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 130,
        valueFormatter: (params) => numberFormatter(params, 0),
        type: 'numericColumn',
      },
      {
        headerName: 'Refrigerant',
        field: 'refrigerant',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Refrigerant Description',
        field: 'refrigerantDescription',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 180,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Refrigerant Default Desc',
        field: 'refrigerantDefaultDescription',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 200,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Refrigerant Quantity',
        field: 'refrigerantQuantity',
        sortable: true,
        filter: 'agNumberColumnFilter',
        flex: 1,
        minWidth: 160,
        valueFormatter: (params) => numberFormatter(params, 2),
        type: 'numericColumn',
      },
      {
        headerName: 'Rating Name',
        field: 'ratingName',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Rating Value',
        field: 'ratingValue',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 120,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'notes',
    name: 'Structured Notes',
    enabled: false, // Hidden by default - 6 note fields
    color: '#ff5722',
    backgroundColor: '#fce4ec',
    columns: [
      {
        headerName: 'General Notes',
        field: 'notes',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 200,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 1 Subject',
        field: 'note1Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 1',
        field: 'note1',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 2 Subject',
        field: 'note2Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 2',
        field: 'note2',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 3 Subject',
        field: 'note3Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 3',
        field: 'note3',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 4 Subject',
        field: 'note4Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 4',
        field: 'note4',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 5 Subject',
        field: 'note5Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 5',
        field: 'note5',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 6 Subject',
        field: 'note6Subject',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Note 6',
        field: 'note6',
        sortable: true,
        filter: true,
        flex: 2,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'legacy',
    name: 'Legacy Integration',
    enabled: false, // Hidden by default - data migration fields
    color: '#607d8b',
    backgroundColor: '#fafafa',
    columns: [
      {
        headerName: 'Legacy Branch ID',
        field: 'legacyBranchId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 140,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Legacy Client Site Equipment RN',
        field: 'legacyClientSiteEquipmentRn',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 220,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Legacy Client Site Equipment Name',
        field: 'legacyClientSiteEquipmentName',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 240,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Legacy Internal Asset ID',
        field: 'legacyInternalAssetId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 180,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Legacy USAsset ID',
        field: 'legacyUsAssetId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 150,
        valueFormatter: nullValueFormatter,
      },
      {
        headerName: 'Legacy USE Asset ID',
        field: 'legacyUseAssetId',
        sortable: true,
        filter: true,
        flex: 1,
        minWidth: 160,
        valueFormatter: nullValueFormatter,
      },
    ],
  },
  {
    id: 'metadata',
    name: 'Metadata',
    enabled: true, // Always show timestamps
    color: '#795548',
    backgroundColor: '#f5f5f5',
    columns: [
      {
        headerName: 'Created',
        field: 'created_at',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 110,
        valueFormatter: dateFormatter,
      },
      {
        headerName: 'Updated',
        field: 'updated_at',
        sortable: true,
        filter: 'agDateColumnFilter',
        flex: 1,
        minWidth: 110,
        valueFormatter: dateFormatter,
      },
    ],
  },
];

// Helper function to get enabled columns with category styling
export const getEnabledColumns = (categories: ColumnCategory[]): ColDef[] => {
  const enabledColumns: ColDef[] = [selectionColumn, ...coreColumns];
  
  categories.forEach(category => {
    if (category.enabled) {
      // Add category styling to each column
      const styledColumns = category.columns.map(col => ({
        ...col,
        headerClass: `ag-header-category-${category.id}`,
        cellClass: `ag-cell-category-${category.id}`,
      }));
      enabledColumns.push(...styledColumns);
    }
  });
  
  enabledColumns.push(actionColumn);
  return enabledColumns;
};

// Column group definitions for organizing columns in the header
export const createColumnGroups = (categories: ColumnCategory[]): (ColDef | ColGroupDef)[] => {
  const groups: (ColDef | ColGroupDef)[] = [...coreColumns];
  
  categories.forEach(category => {
    if (category.enabled && category.columns.length > 0) {
      groups.push({
        headerName: category.name,
        children: category.columns,
        headerClass: 'ag-header-group-custom',
      });
    }
  });
  
  groups.push(actionColumn);
  return groups;
};

// Default column configuration
export const defaultColDef: ColDef = {
  resizable: true,
  sortable: true,
  filter: true,
  flex: 1,
  minWidth: 120,
  wrapHeaderText: true,
  autoHeaderHeight: true,
  wrapText: true,
  autoHeight: true,
  cellStyle: {
    'white-space': 'normal',
    'word-wrap': 'break-word',
    'overflow-wrap': 'break-word',
    'line-height': '1.4',
  },
};

// Column type definitions for AG-Grid
export const columnTypes = {
  numericColumn: {
    filter: 'agNumberColumnFilter',
    cellClass: 'ag-right-aligned-cell',
    headerClass: 'ag-right-aligned-header',
  },
};